name: CI/CD MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLproject/train_pca.csv"
  TARGET_VAR: "Cr"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL
      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow
      # Run as a mlflow project
      - name: Run mlflow project
        run: |
          mlflow run MLproject --env-manager=local
      # Setup git large files
      - name: Set up Git LFS
        run: |
          git config --global user.name "${{ secrets.username }}"
          git config --global user.email "${{ secrets.email }}"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
      
          # (1) Cek apakah ada perubahan dan commit `mlruns/`
          git lfs install
          git lfs track "mlruns/**"
          git add .gitattributes
          git add mlruns/ || echo "No mlruns folder yet"
          git commit -m "Save mlruns before pulling main" || echo "Nothing to commit"
      
          # (2) Push dulu untuk menghindari konflik
          git push origin main
      
          # (3) Baru pull setelah commit lokal aman
          git pull origin main

     
      # Get latest run_id of MLflow
      - name: Get MLflow latest run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | grep -v -e 'mlruns/0/models/' -e 'mlruns/0/datasets/' | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      # Build docker model
      - name: Build docker model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "cc-attrition"
      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag cc ${{ secrets.DOCKER_HUB_USERNAME }}/cc-attrition:latest
      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cc-attrition:latest
